/* 
22-09-06
c1
I bit di un numero intero rappresentano condizioni di un sistema. Se lo stato attuale è 6 (0110) vuole dire che attualmente sono vere le condizioni 2 (0010) e 4 (0100).
Scrivere un monitor bitcond che fornisca le seguenti procedure entry:
void set(int bit2set); accende nello stato attuale i bit di bit2set
void unset(int bit2unset) spegne nello stato attuale i bit di bit2unset
void statuswait(int bit2wait) attende che lo stato attuale soddisfi tutti le condizioni indicate in bit2wait (cioè che tutti i bit in bit2wait siano accesi nello stato attuale).
Le richieste statuswait devono essere servite in ordine FIFO (cioè un processo anche se sono presenti tutte lecondizioni necessarie deve attendere se un processo che ha chiamato statuswait prima è in attesa).
Lo stato iniziale è zero (nessuna risorsa disponibile)
*/

monitor bitcond{
int statoAttuale = 0;
int numProc;
condition status; //coda di conditions
condition waiting; //coda di condizioni 


void set(int bit2set){
	int add=0;
	for(int i=3; i>=0 i++){
		if(statoAttuale/10^i != bit2set/10^i){
		add = add + 10^3;	
	}
	statoAttuale += add;
	status.signal();
}

void unset(int bit2unset){
	int sub=0;
	for(int i=3; i>=0 i++){
		if(statoAttuale/10^i != bit2set/10^i){
		sub = sub + 10^3;	
	}
	statoAttuale -= sub;
}

void statuswait(int bit2wait){
	numProc++;
	if(numProc>1){
		waiting.wait();
	while(true){
		if(bit2wait!=statoAttuale){
			status.wait();
		} else { break; }
	} 
	numProc--;
	waiting.signal();
	}

	
}
