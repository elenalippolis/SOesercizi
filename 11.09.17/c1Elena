monitor crossing{
  queue <condition> nord, est, sud, west;
  condition accesso, libero, nord, est, sud, ovest;
  queue incrocio;
  
  void enter(direction){
    condition c = new condition;
    bool found = false;
    libero.wait();
    
    while(!found) {
    if(direction == N) {
      nord.enqueue(c);
      nord.signal();
      c.wait();
      found = true;
     } else if(direction == E) {
      est.enqueue(c);
      est.signal();
      c.wait();
      found = true;
      } else if(direction == S) {
        sud.enqueue(c);
        sud.signal()
        c.wait();
        found = true;
       } else if(direction == W) {
        west.enqueue(c);
        west.signal();
        c.wait();
        found = true;
       }
     }
     
   }
   
   void exit(direction){
    while(true){
      if(!nord.isEmpty()){
        c=nord.dequeue();
        c.signal();
       } else if(nord.isEmpty()){
        nord.wait();
        } 
       if(!est.isEmpty()){
        c = est.dequeue();
        c.signal();
       } else if(est.isEmpty()){
        est.wait();
       }
      if(!sud.isEmpty()){
        c = sud.dequeue();
        c.signal();
       } else if(sud.isEmpty()){
        sud.wait();
       }
      if(!west.isEmpty()){
        c = west.dequeue();
        c.signal();
       } else if(west.isEmpty()){
        west.wait();
       }
     libero.signal();
   }
        
     
