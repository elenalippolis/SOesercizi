/*
Una sezione-acritica-unificante (SAU) è una sequenza di istruzioni che può essere eseguita
contemporaneamente da più processi, ma i processi possono uscirne solo quanto tutti i processi che stanno
eseguendo la SAU ne completano l'esecuzione.
Ogni processo chiama:
 SAU_enter()
 ... codice SAU
 SAU_exit()
Scrivere le funzioni SAU_enter e SAU_exit mediante l'uso di semafori.
  */

//i proc possono uscirne solo quando tutti completano l'esecuzione
semaphore mutex(1);
semaphore sem(0);
int nenter, nexit;


void SAU_enter(){
  mutex.P();
  nenter++;
  mutex.V();
}

void SAU_exit(){
  mutex.P();
  nexit++;
  if(nenter!=nexit){
    mutex.V();
    sem.P();
  } else {
    for i=0; i<nexit; i++:
      sem.V();
    nexit=0;
    mutex.V();
  }
}

//quasi tutto giusto
