da correggere; ,ma dovrebbe essere giusta

/*Definiamo col nome di semaforo monobinario un semaforo che può assumere solamente i valori zero e
uno. Come un semaforo binario ordinario una operazione monoP quando il semaforo ha valore zero deve bloccare il
processo chiamante, altrimenti porta il valore del semaforo da 1 a 0. Quando il valore del semaforo è zero, una
operazione monoV sblocca il primo processo bloccato, se ve ne sono, altrimenti porta il valore da 0 a 1. Una operazione
monoV su un semaforo monobinario che ha valore 1 non produce alcun effetto. Scrivere il monitor monobinarysem
che implementi i metodi monoP e monoV */


//semaforo che può assumere solo i valori 0 e 1
monitor monobinarysem{
	int value;
	queue waitingProc;
	
	//se il sem ha val 0 blocca il proc chiamante
	//sennò porta il val a 0
	void monoP(){
		if(value==0){
			condition c = new condition;
			waitingProc.enqueue(c);
			c.wait();
		} else {
			value = 0;
		}
	}
	
	//se il val è 0, sblocca il primo proc bloccato se ci sono
	//altrimenti porta il val a 1
	//se ha già val 1 non fa niente
	void monoV(){
		if(value==0){
			if(!waitingProc.empty()){
				c = waitingProc.dequeue();
				c.signal();
			} else {
				value = 1;
			}
		}
	}

}
