//esercizio corretto

waiting{
  dest;
  next;
}

void ssend(msg_t msg, pid dest){
  sasend(<msg, getpid()>, dest);
  waiting.append(dest);
  bool lock;
  waiting_ack=waiting;
  
  do {
    <ack, pid> = sarecv();
    do {
      if(pid == waiting_ack.dest){
        waiting.remove(waiting_ack.dest);
      }
      waiting_ack = waiting_ack.next;
     } while(!waiting_ack.isEmpty());
     lock = waiting.isEmpty() ? false : true;
   } while(lock);
  
}

lista {
  msg_t msg;
  pid_t pid;
  next;
}

msg_t sarecv(pid_t mitt){
  bool check;
  do {
    <msg_t msg, pid_t pid> = sarecv();
    if(mitt == pid) {
      sasend(<ACK, getpid()>, pid);
      return msg;
    }
    if(!lista.isEmpty()){
      while(lista.next != null) {
        if(lista.pid == mitt){
          sasend(<ACK, getpid()>, lista.pid);
          messaggio = lista.msg;
          lista.remove(lista.pid, lista.msg);
          return messaggio;
        }
        lista = lista.next;
      }
      lista.append(msg, pid);
      check = true;
     } while(check);
   }
    
    

}
