/*
Esercizio c.1: Il monitor delay deve fornire tre procedure entry:
boolean delay(unsigned int timeout)
int count(void)
void tick(void)
La funzione tick viene richiamata ad ogni millisecondo. Un processo messo in attesa a causa di una delay attende per
un numero di millisecondi (tick) indicato nel parametro.
La procedure entry count deve restituire il numero di processi attualmente in attesa a causa di una delay.
Scrivere delay.
*/

monitor delay{
  list <int, condition> waitingProc;

  //proc in attesa attende timeout ms prima di sbloccarsi
  boolean delay(unsigned int timeout){
    condition c = new condition;
    waitingProc.add(<timeout, c>);
    c.wait();
  }

  //restituisce num processi in attesa a causa di un delay
  int count(){
    return(waitingProc.length);
  }

  //richiamata ogni ms
  void tick(){
    //decrementa tutti i timeout dei processi di 1
      decrementAll(waitingProc);
      tmp=waitingProc;
      while(!tmp==NULL){
        if(tmp.val.first==0){
          c = tmp.val.delete();
          c.signal();
          tmp = tmp.next;
        }
      }
  }
}
