/*
Esercizio c.2: Dato un servizio di message passing asincrono scrivere un servizio di message passing sincrono a
spedizione multipla (senza fare uso di processi server). Devono essere previste due funzioni:
mulsend(pid_t destination, T msg, int times)
T mulrecv(pid_t sender)
La chiamata mulsend spedisce il messaggio msg al processo destination times volte. Solo quando il messaggio è
stato ricevuto times volte da destination l'esecuzione della funzione mulsend viene completata.
Il ricevente può indicare il valore zero come sender nella mulrecv per indicare che vuole ricevere un messaggio da
qualsiasi mittente.
*/
//MPA -> MPS a spedizione multipla

//spedisce il msg al proc dest times volte; solo quando è stato ricevuto times volte esce
mulsend(pid_t dest, T msg, int times){
  for (i=0; i<times i++){
    asend(<getpid(), msg, times>, dest);
  }
  ACK = arecv(sender);
}

//0 sender -> ANY
T mulrecv(pid_t sender){
  while(true){
    s, msg, times = arecv(ANY);
    db.add(<s, msg>);
    if(db.count(s)==times){
      asend(s, ACK);
      return msg;
    }
  }
}
