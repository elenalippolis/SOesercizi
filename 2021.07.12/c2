il metodo wP potrebbe rilasciare il mutex e rimanere in attesa sul semaforo s anche se ci fossero 
processi che hanno già incrementato il valore del semaforo. Questo può creare una situazione in cui 
il valore del semaforo è positivo, ma ci sono ancora processi in attesa sul semaforo, che non 
dovrebbe mai accadere.

/*
Esercizio c.2: Quella che segue vorrebbe essere l'implementazione di un semaforo unfair inizializzato a zero ma è
errata. Mostrare un caso nel quale il valore del semaforo (value) non venga correttamente mantenuto. Correggere il
codice usando il passaggio del testimone (passing le batôn).

*/

class: wrongsem
int value = 0, count = 0
semaphore mutex init 1;
semaphore s init 0;

void wV():
 mutex.P()                              
 if value == 0 && count > 0: 
   s.V()    
 else:
   value++                              
 mutex.V()                              


 void wP()
   mutex.P()                            
   if value == 0:
     count++         
     s.P()        
     count--
   else:
     value--
   mutex.V()

  
